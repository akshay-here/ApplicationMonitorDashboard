version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: server
    ports:
      - "5000:5000"
    depends_on:
      - kafka

  kafka-consumer:
    build: 
      context: ./consumer
      dockerfile: Dockerfile
    container_name: kafka-consumer
    depends_on:
      - kafka

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment: 
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: logsDB
    volumes:
      - pg_data:/var/lib/postgresql/data

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yml  # Correct config path
      - loki_data:/loki  # Persistent storage
    command: -config.file=/etc/loki/local-config.yml

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail.yml:/etc/promtail/config.yml  # Mount config file
      # - /var/log:/var/log:ro  # Ensure correct logs are mounted
      - /var/lib/docker/containers:/var/lib/docker/containers  # Mount container logs
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      loki:
        condition: service_started  # Ensures Loki is up before Promtail starts


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Config file
      # - prometheus_data:/prometheus  # Persistent storage for metrics
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      # - "--storage.tsdb.path=/prometheus"
      # - "--storage.tsdb.retention.time=15d"  # Keep data for 15 days
    restart: unless-stopped  # Ensures it restarts automatically

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki

volumes:
  pg_data:
  grafana_data:
  prometheus_data: 
  loki_data: 